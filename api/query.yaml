openapi: 3.0.3
info:
  title: Specification of the web API that allow users to query leaks information
  description: |-
    Service that processes read/query operations requests.
    
    Some useful links:
    - [Use Cases](https://github.com/palavrapasse/docs/blob/master/core/use-cases.md)
    - [Entities](https://github.com/palavrapasse/docs/blob/master/core/entities.md)
    - [Data Model](https://github.com/palavrapasse/docs/blob/master/core/data-model.md)
  license:
    name: MIT License
    url: https://github.com/palavrapasse/query/blob/master/LICENSE
  version: 0.0.1
tags:
  - name: leaks
    description: Leaks information query endpoints
  - name: platforms
    description: Leaks platforms information query endpoints
  - name: health check
    description: Service health information query endpoints
paths:
  /leaks:
    get:
      tags:
        - leaks
      summary: Finds leaks
      operationId: findLeaks
      parameters:
        - name: type
          in: query
          description: Type of information provided in affected
          required: false
          explode: true
          schema:
            type: string
            default: email
            enum:
              - email
              - password
        - name: affected
          in: query
          description: Values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: array
            items: 
              $ref: '#/components/schemas/Email'
        - name: target
          in: query
          description: Specifies the target leaks considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: all
            enum:
              - all
              - newest
              - oldest
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leak'
  /platforms:
    get:
      tags:
        - platforms
      summary: Finds affected platforms
      operationId: findPlatforms
      parameters:
        - name: target
          in: query
          description: Specifies the target affected platforms considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: all
            enum:
              - all
              - newest
              - oldest
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
  /health:
    get:
      tags:
        - health check
      summary: Provides the information about the health of the service
      operationId: healthcheck
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
components:
  schemas:
    Leak:
      type: object
      properties:
        context: 
          type: string
          example: "Leak context"
        shareDateMSEpoch:
          type: number
    Platform:
      type: string
      example: "Platform1"
    Email:
      type: string
      format: email
      example: "test@mail.com"
    Health:
      type: object
      properties:
        cpu:
          type: number
          format: float
          example: 8
        cpuPercentage:
          type: number
          format: float
          example: 11,74
        ram:
          type: number
          format: float
          example: 12723146752
        ramPercentage:
          type: number
          format: float
          example: 75,00
        ramMax:
          type: number
          format: float
          example: 157850401920
